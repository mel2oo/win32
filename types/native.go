package types

// IMAGE_SECTION_HEADER_u
type IMAGE_SECTION_HEADER_u struct {
	PhysicalAddress DWORD
	VirtualSize     DWORD
}

// IMAGE_SECTION_HEADER
type IMAGE_SECTION_HEADER struct {
	Name                 [8]BYTE
	Misc                 IMAGE_SECTION_HEADER_u
	VirtualAddress       DWORD
	SizeOfRawData        DWORD
	PointerToRawData     DWORD
	PointerToRelocations DWORD
	PointerToLinenumbers DWORD
	NumberOfRelocations  WORD
	NumberOfLinenumbers  WORD
	Characteristics      DWORD
}
type PIMAGE_SECTION_HEADER *IMAGE_SECTION_HEADER

// EVENT_TYPE
type EVENT_TYPE UINT

const (
	NotificationEvent    EVENT_TYPE = 0
	SynchronizationEvent EVENT_TYPE = 1
)

// FILE_SHARE_MODE
type FILE_SHARE_MODE DWORD

const (
	FILE_SHARE_READ   FILE_SHARE_MODE = 0x00000001
	FILE_SHARE_WRITE  FILE_SHARE_MODE = 0x00000002
	FILE_SHARE_DELETE FILE_SHARE_MODE = 0x00000004
)

// MemoryType
type MemoryType DWORD

const (
	MEM_IMAGE   MemoryType = 0x1000000
	MEM_MAPPED  MemoryType = 0x40000
	MEM_PRIVATE MemoryType = 0x20000
)

// MemoryAllocationFlags
type MemoryAllocationFlags DWORD

const (
	MEM_COMMIT      MemoryAllocationFlags = 0x1000
	MEM_RESERVE     MemoryAllocationFlags = 0x2000
	MEM_DECOMMIT    MemoryAllocationFlags = 0x4000
	MEM_RELEASE     MemoryAllocationFlags = 0x8000
	MEM_FREE        MemoryAllocationFlags = 0x10000
	MEM_PRIVATE1    MemoryAllocationFlags = 0x20000
	MEM_MAPPED1     MemoryAllocationFlags = 0x40000
	MEM_RESET       MemoryAllocationFlags = 0x80000
	MEM_TOP_DOWN    MemoryAllocationFlags = 0x100000
	MEM_WRITE_WATCH MemoryAllocationFlags = 0x200000
	MEM_PHYSICAL    MemoryAllocationFlags = 0x400000
	MEM_ROTATE      MemoryAllocationFlags = 0x800000
	MEM_LARGE_PAGES MemoryAllocationFlags = 0x20000000
	MEM_4MB_PAGES   MemoryAllocationFlags = 0x80000000
)

// MemoryProtection
type MemoryProtection DWORD

const (
	SEC_PAGE_EXECUTE           MemoryProtection = 0x10
	SEC_PAGE_EXECUTE_READ      MemoryProtection = 0x20
	SEC_PAGE_EXECUTE_READWRITE MemoryProtection = 0x40
	SEC_PAGE_EXECUTE_WRITECOPY MemoryProtection = 0x80
	SEC_PAGE_NOACCESS          MemoryProtection = 0x01
	SEC_PAGE_READONLY          MemoryProtection = 0x02
	SEC_PAGE_READWRITE         MemoryProtection = 0x04
	SEC_PAGE_WRITECOPY         MemoryProtection = 0x08
	SEC_PAGE_GUARD             MemoryProtection = 0x100
	SEC_PAGE_NOCACHE           MemoryProtection = 0x200
	SEC_PAGE_WRITECOMBINE      MemoryProtection = 0x400
	SEC_COMMIT                 MemoryProtection = 0x8000000
	SEC_IMAGE                  MemoryProtection = 0x1000000
	SEC_LARGE_PAGES            MemoryProtection = 0x80000000
	SEC_NOCACHE                MemoryProtection = 0x10000000
	SEC_RESERVE                MemoryProtection = 0x4000000
	SEC_WRITECOMBINE           MemoryProtection = 0x40000000
)

// NtVerType
type NtVerType DWORD

const (
	VER_MINORVERSION     NtVerType = 0x0000001
	VER_MAJORVERSION     NtVerType = 0x0000002
	VER_BUILDNUMBER      NtVerType = 0x0000004
	VER_PLATFORMID       NtVerType = 0x0000008
	VER_SERVICEPACKMINOR NtVerType = 0x0000010
	VER_SERVICEPACKMAJOR NtVerType = 0x0000020
	VER_SUITENAME        NtVerType = 0x0000040
	VER_PRODUCT_TYPE     NtVerType = 0x0000080
)

// TOKEN_ACCESS_MASK
type TOKEN_ACCESS_MASK DWORD

const (
	TOKEN_GENERIC_READ             TOKEN_ACCESS_MASK = 0x80000000
	TOKEN_GENERIC_WRITE            TOKEN_ACCESS_MASK = 0x40000000
	TOKEN_GENERIC_EXECUTE          TOKEN_ACCESS_MASK = 0x20000000
	TOKEN_GENERIC_ALL              TOKEN_ACCESS_MASK = 0x10000000
	TOKEN_MAXIMUM_ALLOWED          TOKEN_ACCESS_MASK = 0x02000000
	TOKEN_ACCESS_SYSTEM_SECURITY   TOKEN_ACCESS_MASK = 0x01000000
	TOKEN_SYNCHRONIZE              TOKEN_ACCESS_MASK = 0x00100000
	TOKEN_STANDARD_RIGHTS_REQUIRED TOKEN_ACCESS_MASK = 0x000F0000
	TOKEN_STANDARD_RIGHTS_ALL      TOKEN_ACCESS_MASK = 0x001F0000
	TOKEN_WRITE_OWNER              TOKEN_ACCESS_MASK = 0x00080000
	TOKEN_WRITE_DAC                TOKEN_ACCESS_MASK = 0x00040000
	TOKEN_DELETE                   TOKEN_ACCESS_MASK = 0x00010000
	TOKEN_ASSIGN_PRIMARY           TOKEN_ACCESS_MASK = 0x0001
	TOKEN_DUPLICATE                TOKEN_ACCESS_MASK = 0x0002
	TOKEN_IMPERSONATE              TOKEN_ACCESS_MASK = 0x0004
	TOKEN_QUERY                    TOKEN_ACCESS_MASK = 0x0008
	TOKEN_QUERY_SOURCE             TOKEN_ACCESS_MASK = 0x0010
	TOKEN_ADJUST_PRIVILEGES        TOKEN_ACCESS_MASK = 0x0020
	TOKEN_ADJUST_GROUPS            TOKEN_ACCESS_MASK = 0x0040
	TOKEN_ADJUST_DEFAULT           TOKEN_ACCESS_MASK = 0x0080
	TOKEN_ADJUST_SESSIONID         TOKEN_ACCESS_MASK = 0x0100
	TOKEN_ALL_ACCESS_P             TOKEN_ACCESS_MASK = 0xf00ff
	TOKEN_ALL_ACCESS               TOKEN_ACCESS_MASK = 0xf01ff
	TOKEN_READ                     TOKEN_ACCESS_MASK = 0x20008
	TOKEN_WRITE                    TOKEN_ACCESS_MASK = 0x200e0
	TOKEN_EXECUTE                  TOKEN_ACCESS_MASK = 0x20000
)

// ObjectAttributes
type ObjectAttributes ULONG

const (
	OBJ_INHERIT            ObjectAttributes = 0x00000002
	OBJ_PERMANENT          ObjectAttributes = 0x00000010
	OBJ_EXCLUSIVE          ObjectAttributes = 0x00000020
	OBJ_CASE_INSENSITIVE   ObjectAttributes = 0x00000040
	OBJ_OPENIF             ObjectAttributes = 0x00000080
	OBJ_OPENLINK           ObjectAttributes = 0x00000100
	OBJ_KERNEL_HANDLE      ObjectAttributes = 0x00000200
	OBJ_FORCE_ACCESS_CHECK ObjectAttributes = 0x00000400
	OBJ_VALID_ATTRIBUTES   ObjectAttributes = 0x000007F2
)

// OBJECT_ATTRIBUTES
type OBJECT_ATTRIBUTES struct {
	Length                   ULONG
	RootDirectory            HANDLE
	ObjectName               PUNICODE_STRING
	Attributes               ObjectAttributes
	SecurityDescriptor       PSECURITY_DESCRIPTOR
	SecurityQualityOfService PSECURITY_QUALITY_OF_SERVICE
}
type POBJECT_ATTRIBUTES *OBJECT_ATTRIBUTES

// RTL_CRITICAL_SECTION_DEBUG
type RTL_CRITICAL_SECTION_DEBUG struct {
	Type                      WORD
	CreatorBackTraceIndex     WORD
	CriticalSection           LPVOID
	ProcessLocksList          LIST_ENTRY
	EntryCount                DWORD
	ContentionCount           DWORD
	Flags                     DWORD
	CreatorBackTraceIndexHigh WORD
	SpareWORD                 WORD
}
type PRTL_CRITICAL_SECTION_DEBUG *RTL_CRITICAL_SECTION_DEBUG

// RTL_CRITICAL_SECTION
type RTL_CRITICAL_SECTION struct {
	DebugInfo      PRTL_CRITICAL_SECTION_DEBUG
	LockCount      LONG
	RecursionCount LONG
	OwningThread   HANDLE
	LockSemaphore  HANDLE
	SpinCount      ULONG_PTR
}
type PRTL_CRITICAL_SECTION *RTL_CRITICAL_SECTION

// NtProtectionFlags
type NtProtectionFlags ULONG

const (
	PAGE_NOACCESS          NtProtectionFlags = 0x01
	PAGE_READONLY          NtProtectionFlags = 0x02
	PAGE_READWRITE         NtProtectionFlags = 0x04
	PAGE_WRITECOPY         NtProtectionFlags = 0x08
	PAGE_EXECUTE           NtProtectionFlags = 0x10
	PAGE_EXECUTE_READ      NtProtectionFlags = 0x20
	PAGE_EXECUTE_READWRITE NtProtectionFlags = 0x40
	PAGE_EXECUTE_WRITECOPY NtProtectionFlags = 0x80
	PAGE_GUARD             NtProtectionFlags = 0x100
	PAGE_NOCACHE           NtProtectionFlags = 0x200
	PAGE_WRITECOMBINE      NtProtectionFlags = 0x400
)

// ProcThreadAttribute
type ProcThreadAttribute DWORD_PTR

const (
	PROC_THREAD_ATTRIBUTE_PARENT_PROCESS    ProcThreadAttribute = 0x00020000
	PROC_THREAD_ATTRIBUTE_EXTENDED_FLAGS    ProcThreadAttribute = 0x00060001
	PROC_THREAD_ATTRIBUTE_HANDLE_LIST       ProcThreadAttribute = 0x00020002
	PROC_THREAD_ATTRIBUTE_IDEAL_PROCESSOR   ProcThreadAttribute = 0x00030005
	PROC_THREAD_ATTRIBUTE_MITIGATION_POLICY ProcThreadAttribute = 0x00020007
	PROC_THREAD_ATTRIBUTE_PREFERRED_NODE    ProcThreadAttribute = 0x00020004
	PROC_THREAD_ATTRIBUTE_UMS_THREAD        ProcThreadAttribute = 0x00030006
	PROC_THREAD_ATTRIBUTE_GROUP_AFFINITY    ProcThreadAttribute = 0x00030003
)

// ProcThreadAttributeFlags
type ProcThreadAttributeFlags DWORD

const (
	PARENT_PROCESS    ProcThreadAttributeFlags = 0x1
	EXTENDED_FLAGS    ProcThreadAttributeFlags = 0x2
	HANDLE_LIST       ProcThreadAttributeFlags = 0x4
	GROUP_AFFINITY    ProcThreadAttributeFlags = 0x8
	PREFERRED_NODE    ProcThreadAttributeFlags = 0x10
	IDEAL_PROCESSOR   ProcThreadAttributeFlags = 0x20
	UMS_THREAD        ProcThreadAttributeFlags = 0x40
	MITIGATION_POLICY ProcThreadAttributeFlags = 0x80
)

// PROC_THREAD_ATTRIBUTE_ENTRY
type PROC_THREAD_ATTRIBUTE_ENTRY struct {
	Attribute ProcThreadAttribute
	Size      SIZE_T
	Value     PVOID
}

// PROC_THREAD_ATTRIBUTE_LIST
type PROC_THREAD_ATTRIBUTE_LIST struct {
	Flags    ProcThreadAttributeFlags
	Size     ULONG
	Count    ULONG
	Reserved ULONG
	Unknown  PULONG
	Entries  [1]PROC_THREAD_ATTRIBUTE_ENTRY
}
type LPPROC_THREAD_ATTRIBUTE_LIST *PROC_THREAD_ATTRIBUTE_LIST

// CLIENT_ID
type HANDLE_NO_HEX UINT_PTR

type CLIENT_ID struct {
	UniqueProcess HANDLE_NO_HEX
	UniqueThread  HANDLE_NO_HEX
}

type PCLIENT_ID *CLIENT_ID

// NOTIFICATION_MASK
type NOTIFICATION_MASK ULONG

const (
	TRANSACTION_NOTIFY_PREPREPARE          NOTIFICATION_MASK = 0x00000001
	TRANSACTION_NOTIFY_PREPARE             NOTIFICATION_MASK = 0x00000002
	TRANSACTION_NOTIFY_COMMIT              NOTIFICATION_MASK = 0x00000004
	TRANSACTION_NOTIFY_ROLLBACK            NOTIFICATION_MASK = 0x00000008
	TRANSACTION_NOTIFY_PREPREPARE_COMPLETE NOTIFICATION_MASK = 0x00000010
	TRANSACTION_NOTIFY_PREPARE_COMPLETE    NOTIFICATION_MASK = 0x00000020
	TRANSACTION_NOTIFY_COMMIT_COMPLETE     NOTIFICATION_MASK = 0x00000040
	TRANSACTION_NOTIFY_ROLLBACK_COMPLETE   NOTIFICATION_MASK = 0x00000080
	TRANSACTION_NOTIFY_RECOVER             NOTIFICATION_MASK = 0x00000100
	TRANSACTION_NOTIFY_SINGLE_PHASE_COMMIT NOTIFICATION_MASK = 0x00000200
	TRANSACTION_NOTIFY_DELEGATE_COMMIT     NOTIFICATION_MASK = 0x00000400
	TRANSACTION_NOTIFY_RECOVER_QUERY       NOTIFICATION_MASK = 0x00000800
	TRANSACTION_NOTIFY_ENLIST_PREPREPARE   NOTIFICATION_MASK = 0x00001000
	TRANSACTION_NOTIFY_LAST_RECOVER        NOTIFICATION_MASK = 0x00002000
	TRANSACTION_NOTIFY_INDOUBT             NOTIFICATION_MASK = 0x00004000
	TRANSACTION_NOTIFY_PROPAGATE_PULL      NOTIFICATION_MASK = 0x00008000
	TRANSACTION_NOTIFY_PROPAGATE_PUSH      NOTIFICATION_MASK = 0x00010000
	TRANSACTION_NOTIFY_MARSHAL             NOTIFICATION_MASK = 0x00020000
	TRANSACTION_NOTIFY_ENLIST_MASK         NOTIFICATION_MASK = 0x00040000
	TRANSACTION_NOTIFY_RM_DISCONNECTED     NOTIFICATION_MASK = 0x01000000
	TRANSACTION_NOTIFY_TM_ONLINE           NOTIFICATION_MASK = 0x02000000
	TRANSACTION_NOTIFY_COMMIT_REQUEST      NOTIFICATION_MASK = 0x04000000
	TRANSACTION_NOTIFY_PROMOTE             NOTIFICATION_MASK = 0x08000000
	TRANSACTION_NOTIFY_PROMOTE_NEW         NOTIFICATION_MASK = 0x10000000
	TRANSACTION_NOTIFY_REQUEST_OUTCOME     NOTIFICATION_MASK = 0x20000000
	TRANSACTION_NOTIFY_COMMIT_FINALIZE     NOTIFICATION_MASK = 0x40000000
)

// TRANSACTION_NOTIFICATION
type TRANSACTION_NOTIFICATION struct {
	TransactionKey          PVOID
	TransactionNotification NOTIFICATION_MASK
	TmVirtualClock          LARGE_INTEGER
	ArgumentLength          ULONG
}

type PTRANSACTION_NOTIFICATION *TRANSACTION_NOTIFICATION
